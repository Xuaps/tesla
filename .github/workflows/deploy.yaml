name: 'Terraform'
 
on:
  push:
    branches:
    - main
  pull_request:
 
jobs:
  provision:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    # Checkout the repository to the GitHub Actions runner
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    - name: Terraform fmt
      id: fmt
      run: terraform -chdir=terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform -chdir=terraform init

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform -chdir=terraform plan -no-color --var-file=main.tfvars
 
    - name: Terraform apply
      id: apply
      run: terraform -chdir=terraform apply -auto-approve -no-color --var-file=main.tfvars

  deploy:
    name: 'Deploy app'
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    # Checkout the repository to the GitHub Actions runner
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      with:
      creds: '{
        "clientId": "${{ secrets.ARM_CLIENT_ID }}",
        "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
        "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
        "tenantId": "${{ secrets.ARM_TENANT_ID }}",
      }'
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.13.2'

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-

    - name: Install dependencies
      run: npm ci --ignore-scripts

    - name: Build
      run: npm run build

    - name: Upload to blob storage
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az storage blob upload-batch --account-name xuapsstsapoductionwe --auth-mode key -d '$web' -s ./dist/.
